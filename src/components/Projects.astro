---
---
<section id="projects" class="section">
    <div class="container">
        <h2>Projects</h2>
        <div class="projects-grid">

            <div class="card project-card">
                <h3>üß† Flask Quiz Application</h3>
                <p class="project-description">
                    Built a full-featured quiz application using Flask with CI/CD integration, containerization, and cloud-native deployment for scalable performance and monitoring.
                </p>
                <ul class="achievements">
                    <li>Designed a modular quiz system loading YAML-based questions with PostgreSQL-backed persistent storage</li>
                    <li>Implemented secure user authentication, real-time scoring, and admin dashboard for quiz and user management</li>
                    <li>Dockerized the app with multi-stage builds and deployed using Kubernetes on AWS for production</li>
                    <li>Set up Jenkins-based CI/CD pipeline with GitHub Actions, Docker Hub integration, and automated testing (~80% coverage)</li>
                    <li>Integrated Prometheus, Grafana, and RabbitMQ for monitoring, visualization, and asynchronous task processing</li>
                </ul>
            </div>   
            
            <div class="card project-card">
                <h3>üõ°Ô∏è Insurance Management System</h3>
                <p class="project-description">
                    Developed a comprehensive insurance management system using Spring Boot, with full CI/CD automation and infrastructure as code implementation following industry best DevOps practices.
                </p>
                <ul class="achievements">
                    <li>Built backend APIs using Java and Spring Boot, packaged with Maven, and containerized via Docker</li>
                    <li>Orchestrated deployments using Kubernetes (Minikube locally) and Docker Compose on AWS cloud infrastructure</li>
                    <li>Implemented end-to-end CI/CD pipeline using Jenkins, with automated testing, building, and deployment stages</li>
                    <li>Provisioned and managed infrastructure using Terraform, enabling reproducible environments across dev/staging</li>
                    <li>Used Ansible for automated server configuration and environment setup, ensuring consistency and scalability</li>
                </ul>
            </div>
            

            <div class="card project-card">
                <h3>ü©∫ Medicure Healthcare App</h3>
                <p class="project-description">
                    Developed a comprehensive healthcare management application using Spring Boot, offering seamless access to medical services for patients and providers.
                </p>
                <ul class="achievements">
                    <li>Enabled patient registration, provider directory, and appointment scheduling features</li>
                    <li>Built RESTful APIs for third-party system integration and responsive web interface</li>
                    <li>Containerized the application using Docker and deployed using Kubernetes</li>
                    <li>Integrated Prometheus and Grafana for real-time monitoring and metrics visualization</li>
                    <li>Technology stack includes Java 8, Spring Boot 2.7.4, Maven, and Jenkins for CI/CD</li>
                </ul>
            </div>

            <div class="card project-card">
                <h3>üé¨ Hotstar Clone CI/CD</h3>
                <p class="project-description">
                    Implemented end-to-end CI/CD pipeline for a Hotstar streaming platform clone using modern DevOps toolchain.
                </p>
                <ul class="achievements">
                    <li>Set up multi-node infrastructure with Jenkins, Nexus, SonarQube, and Tomcat across EC2 instances</li>
                    <li>Automated build and deployment process using shell scripts and Maven</li>
                    <li>Integrated code quality gates and artifact storage within Jenkins pipeline</li>
                    <li>Configured Amazon S3 backup solution for application assets</li>
                    <li>Deployed across Amazon Linux 2 & Ubuntu 24.04 EC2 instances</li>
                </ul>
            </div>

            <div class="card project-card">
                <h3>üé• Netflix Clone CI/CD</h3>
                <p class="project-description">
                    Deployed a Netflix Clone web application on AWS with a fully automated CI/CD pipeline using Git, GitHub, Jenkins, SonarQube, Nexus, k8s and Docker.
                </p>
                <ul class="achievements">
                    <li>Leveraged Apache Tomcat automating the build-test-deploy lifecycle</li>
                    <li>Implemented code quality checks and artifact versioning</li>
                    <li>Achieved 70% faster deployments and 40% fewer post-deploy issues</li>
                    <li>Enabled seamless rollouts using containers</li>
                </ul>
            </div>

            <div class="card project-card">
                <h3>AWS 3 Tier Architecture WebApp</h3>
                <p class="project-description">
                    Designed and implemented a scalable three-tier architecture on AWS with industry best practices.
                </p>
                <ul class="achievements">
                    <li>Implemented Auto Scaling Groups and ELB in the application tier for high availability</li>
                    <li>Utilized Amazon S3 and CloudFront for static file hosting and CDN-based content delivery, reducing latency by 30%</li>
                    <li>Configured Multi-AZ Amazon RDS with CloudWatch monitoring</li>
                    <li>Secured the stack using IAM, Security Groups, and VPC best practices</li>
                </ul>
            </div>
        </div>
    </div>
</section>

<style>
    h2 {
        font-size: 2.5rem;
        margin-bottom: 2rem;
        text-align: center;
        color: var(--text);
    }

    .projects-grid {
        display: grid;
        gap: 2rem;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    }

    .project-card {
        height: 100%;
        padding: 1rem;
    }

    .project-card h3 {
        font-size: 1.5rem;
        margin: 0 0 1rem 0;
        color: var(--accent);
        padding: 1rem;
    }

    .project-description {
        margin-bottom: 1rem;
        line-height: 1.6;
    }

    .achievements {
        margin: 0;
        padding-left: 1.5rem;
    }

    .achievements li {
        margin-bottom: 0.5rem;
        line-height: 1.6;
    }

    .achievements li:last-child {
        margin-bottom: 0;
    }

    @media (max-width: 768px) {
        .projects-grid {
            grid-template-columns: 1fr;
        }
    }
</style>
